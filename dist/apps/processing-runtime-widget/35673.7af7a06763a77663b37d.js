/*! For license information please see 35673.7af7a06763a77663b37d.js.LICENSE.txt */
"use strict";(self.webpackChunkcumulocity_processing_widget_plugin=self.webpackChunkcumulocity_processing_widget_plugin||[]).push([[35673],{35673:function(t,n,s){s.r(n),s.d(n,{AUTO_STYLE:function(){return e},AnimationBuilder:function(){return i},AnimationFactory:function(){return o},NoopAnimationPlayer:function(){return g},animate:function(){return h},animateChild:function(){return p},animation:function(){return y},group:function(){return a},keyframes:function(){return c},query:function(){return F},sequence:function(){return u},stagger:function(){return m},state:function(){return _},style:function(){return l},transition:function(){return f},trigger:function(){return r},useAnimation:function(){return d},"ɵAnimationGroupPlayer":function(){return S},"ɵPRE_STYLE":function(){return E}});class i{}class o{}const e="*";function r(t,n){return{type:7,name:t,definitions:n,options:{}}}function h(t,n=null){return{type:4,styles:n,timings:t}}function a(t,n=null){return{type:3,steps:t,options:n}}function u(t,n=null){return{type:2,steps:t,options:n}}function l(t){return{type:6,styles:t,offset:null}}function _(t,n,s){return{type:0,name:t,styles:n,options:s}}function c(t){return{type:5,steps:t}}function f(t,n,s=null){return{type:1,expr:t,animation:n,options:s}}function y(t,n=null){return{type:8,animation:t,options:n}}function p(t=null){return{type:9,options:t}}function d(t,n=null){return{type:10,animation:t,options:n}}function F(t,n,s=null){return{type:11,selector:t,animation:n,options:s}}function m(t,n){return{type:12,timings:t,animation:n}}function D(t){Promise.resolve(null).then(t)}class g{constructor(t=0,n=0){this._onDoneFns=[],this._onStartFns=[],this._onDestroyFns=[],this._originalOnDoneFns=[],this._originalOnStartFns=[],this._started=!1,this._destroyed=!1,this._finished=!1,this._position=0,this.parentPlayer=null,this.totalTime=t+n}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach((t=>t())),this._onDoneFns=[])}onStart(t){this._originalOnStartFns.push(t),this._onStartFns.push(t)}onDone(t){this._originalOnDoneFns.push(t),this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}init(){}play(){this.hasStarted()||(this._onStart(),this.triggerMicrotask()),this._started=!0}triggerMicrotask(){D((()=>this._onFinish()))}_onStart(){this._onStartFns.forEach((t=>t())),this._onStartFns=[]}pause(){}restart(){}finish(){this._onFinish()}destroy(){this._destroyed||(this._destroyed=!0,this.hasStarted()||this._onStart(),this.finish(),this._onDestroyFns.forEach((t=>t())),this._onDestroyFns=[])}reset(){this._started=!1,this._finished=!1,this._onStartFns=this._originalOnStartFns,this._onDoneFns=this._originalOnDoneFns}setPosition(t){this._position=this.totalTime?t*this.totalTime:1}getPosition(){return this.totalTime?this._position/this.totalTime:1}triggerCallback(t){const n="start"==t?this._onStartFns:this._onDoneFns;n.forEach((t=>t())),n.length=0}}class S{constructor(t){this._onDoneFns=[],this._onStartFns=[],this._finished=!1,this._started=!1,this._destroyed=!1,this._onDestroyFns=[],this.parentPlayer=null,this.totalTime=0,this.players=t;let n=0,s=0,i=0;const o=this.players.length;0==o?D((()=>this._onFinish())):this.players.forEach((t=>{t.onDone((()=>{++n==o&&this._onFinish()})),t.onDestroy((()=>{++s==o&&this._onDestroy()})),t.onStart((()=>{++i==o&&this._onStart()}))})),this.totalTime=this.players.reduce(((t,n)=>Math.max(t,n.totalTime)),0)}_onFinish(){this._finished||(this._finished=!0,this._onDoneFns.forEach((t=>t())),this._onDoneFns=[])}init(){this.players.forEach((t=>t.init()))}onStart(t){this._onStartFns.push(t)}_onStart(){this.hasStarted()||(this._started=!0,this._onStartFns.forEach((t=>t())),this._onStartFns=[])}onDone(t){this._onDoneFns.push(t)}onDestroy(t){this._onDestroyFns.push(t)}hasStarted(){return this._started}play(){this.parentPlayer||this.init(),this._onStart(),this.players.forEach((t=>t.play()))}pause(){this.players.forEach((t=>t.pause()))}restart(){this.players.forEach((t=>t.restart()))}finish(){this._onFinish(),this.players.forEach((t=>t.finish()))}destroy(){this._onDestroy()}_onDestroy(){this._destroyed||(this._destroyed=!0,this._onFinish(),this.players.forEach((t=>t.destroy())),this._onDestroyFns.forEach((t=>t())),this._onDestroyFns=[])}reset(){this.players.forEach((t=>t.reset())),this._destroyed=!1,this._finished=!1,this._started=!1}setPosition(t){const n=t*this.totalTime;this.players.forEach((t=>{const s=t.totalTime?Math.min(1,n/t.totalTime):1;t.setPosition(s)}))}getPosition(){const t=this.players.reduce(((t,n)=>null===t||n.totalTime>t.totalTime?n:t),null);return null!=t?t.getPosition():0}beforeDestroy(){this.players.forEach((t=>{t.beforeDestroy&&t.beforeDestroy()}))}triggerCallback(t){const n="start"==t?this._onStartFns:this._onDoneFns;n.forEach((t=>t())),n.length=0}}const E="!"}}]);